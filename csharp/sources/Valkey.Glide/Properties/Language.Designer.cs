//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valkey.Glide.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Language {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Language() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Valkey.Glide.Properties.Language", typeof(Language).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range end must be specified if using BitCountType.
        /// </summary>
        internal static string BitCount_RangeEndMustBeSpecifiedIfUsingBitCountType {
            get {
                return ResourceManager.GetString("BitCount_RangeEndMustBeSpecifiedIfUsingBitCountType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range end must not be from end.
        /// </summary>
        internal static string BitCount_RangeEndMustNotBeFromEnd {
            get {
                return ResourceManager.GetString("BitCount_RangeEndMustNotBeFromEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range must be specified when bitCountType is specified.
        /// </summary>
        internal static string BitCount_RangeRequiredIfBitCountTypeSpecified {
            get {
                return ResourceManager.GetString("BitCount_RangeRequiredIfBitCountTypeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range start must not be from end.
        /// </summary>
        internal static string BitCount_RangeStartMustNotBeFromEnd {
            get {
                return ResourceManager.GetString("BitCount_RangeStartMustNotBeFromEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CustomCommand setup incomplete, Arg{0} not set..
        /// </summary>
        internal static string CustomCommand_ArgumentNotSet_0index {
            get {
                return ResourceManager.GetString("CustomCommand_ArgumentNotSet_0index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The get command failed to execute..
        /// </summary>
        internal static string Exceptions_GlideGetCommandFailedException {
            get {
                return ResourceManager.GetString("Exceptions_GlideGetCommandFailedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The set command failed to execute successful.
        /// </summary>
        internal static string Exceptions_GlideSetCommandFailedException {
            get {
                return ResourceManager.GetString("Exceptions_GlideSetCommandFailedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key not provided with GetCommand..
        /// </summary>
        internal static string GetCommand_KeyNotSet {
            get {
                return ResourceManager.GetString("GetCommand_KeyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot seal GlideSerializerCollection as already sealed..
        /// </summary>
        internal static string GlideTransformer_AlreadySealedError {
            get {
                return ResourceManager.GetString("GlideTransformer_AlreadySealedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot transform values as GlideSerializerCollection is not sealed..
        /// </summary>
        internal static string GlideTransformer_NotSealedError {
            get {
                return ResourceManager.GetString("GlideTransformer_NotSealedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot register transformers after the GlideSerializerCollection was sealed..
        /// </summary>
        internal static string GlideTransformer_SealedError {
            get {
                return ResourceManager.GetString("GlideTransformer_SealedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While converting the value for the SET command to a string, using the default type converter, ConvertToInvariantString returned null. Please make sure that the type converter you are using can convert the value to a string. If that is not possible, please use this method with a string value instead, allowing you to handle the conversion yourself..
        /// </summary>
        internal static string Set_TypeConverterFailedToConvertValueToInvariantString {
            get {
                return ResourceManager.GetString("Set_TypeConverterFailedToConvertValueToInvariantString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key not provided with SetCommand..
        /// </summary>
        internal static string SetCommand_KeyNotSet {
            get {
                return ResourceManager.GetString("SetCommand_KeyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value not provided with SetCommand..
        /// </summary>
        internal static string SetCommand_ValueNotSet {
            get {
                return ResourceManager.GetString("SetCommand_ValueNotSet", resourceCulture);
            }
        }
    }
}
